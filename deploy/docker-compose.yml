# deploy/docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:15-alpine
    prots:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB:   ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:  
       - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}   
    command: uvicorn demopj.main:app --host 0.0.0.0 --port 8000
    ports:
      - '8000:8000'
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend-vue
      dockerfile: Dockerfile
    # Vue 빌드 산출물이 /app/dist 에 생성된다고 가정
    volumes:
      - frontend_dist:/app/dist
    # 실제로는 정적서버(Nginx)가 서빙하니 포트 개방은 안 해도 무방

  nginx:
    image: nginx:stable-alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/nginx.conf:ro
      - frontend_dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
      - frontend

volumes:
  pgdata:
  frontend_dist:
